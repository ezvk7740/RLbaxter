FROM ros:kinetic-robot

#RUN rm /bin/sh && ln -s /bin/bash /bin/sh
SHELL ["/bin/bash", "-c"]
# Arguments
#ARG user
#ARG uid
#ARG home
#ARG workspace
#ARG shell

# Basic Utilities
RUN apt-get -y update && apt-get install -y zsh screen tree sudo ssh synaptic

# Latest X11 / mesa GL
#RUN apt-get install -y\
 # xserver-xorg-dev-lts-wily\
 # libegl1-mesa-dev-lts-wily\
 # libgl1-mesa-dev-lts-wily\
 # libgbm-dev-lts-wily\
 # mesa-common-dev-lts-wily\
 # libgles2-mesa-lts-wily\
 # libwayland-egl1-mesa-lts-wily\
 # libopenvg1-mesa

#RUN apt-get install -y\
 # qt4-dev-tools\
 # libqt5core5a libqt5dbus5 libqt5gui5 libwayland-client0\
 # libwayland-server0 libxcb-icccm4 libxcb-image0 libxcb-keysyms1\
 # libxcb-render-util0 libxcb-util0 libxcb-xkb1 libxkbcommon-x11-0\
 # libxkbcommon0

RUN apt-get install -y x11-apps python-pip build-essential
RUN pip install catkin_tools

# Make SSH available
EXPOSE 22

# Mount the user's home directory
#VOLUME "${home}"

# Clone user into docker image and set up X11 sharing 
#RUN \
 # echo "${user}:x:${uid}:${uid}:${user},,,:${home}:${shell}" >> /etc/passwd && \
 # echo "${user}:x:${uid}:" >> /etc/group && \
 # echo "${user} ALL=(ALL) NOPASSWD: ALL" > "/etc/sudoers.d/${user}" && \
 # chmod 0440 "/etc/sudoers.d/${user}"

#FROM ubuntu:14.04
#RUN apt-get update && apt-get install -y locales && rm -rf /var/lib/apt/lists/* \
  #  && localedef -i en_US -c -f UTF-8 -A /usr/share/locale/locale.alias en_US.UTF-8
#ENV LANG en_US.utf8
RUN apt-get -y update
#RUN update-locale LANG=C LANGUAGE=C LC_ALL=C LC_MESSAGES=POSIX
#RUN apt-get -y install python-rosdep python-rosinstall-generator python-wstool python-rosinstall build-essential
RUN apt-get -y install wget
#RUN sh -c 'echo "deb http://packages.ros.org/ros/ubuntu trusty main" > /etc/apt/sources.list.d/ros-latest.list'
#RUN wget http://packages.ros.org/ros.key -O - | apt-key add -
#RUN sh -c 'echo "deb http://packages.ros.org/ros/ubuntu trusty main" > /etc/apt/sources.list.d/ros-latest.list'
#RUN apt-key adv --keyserver hkp://ha.pool.sks-keyservers.net --recv-key 421C365BD9FF1F717815A3895523BAEEB01FA116
#RUN sh -c 'echo "deb http://packages.ros.org/ros/ubuntu $(lsb_release -sc) main" > /etc/apt/sources.list.d/ros-latest.list'
#RUN sudo apt-key adv --keyserver hkp://ha.pool.sks-keyservers.net:80 --recv-key 421C365BD9FF1F717815A3895523BAEEB01FA116
#RUN ubuntu:14.04 grep -v '^#' /etc/apt/sources.list
#RUN apt-get -y update
RUN apt-get -y install python-rosdep python-rosinstall-generator python-wstool python-rosinstall build-essential
#RUN apt-get install libgl1-mesa-dev-lts-trusty
RUN apt-get -y install ros-kinetic-desktop-full
#RUN apt-get -y install ros-indigo-desktop
#RUN apt-get -y install git-core python-argparse python-wstool python-vcstools python-rosdep ros-indigo-control-msgs ros-indigo-joystick-drivers
#RUN apt-get -y install gazebo2 ros-indigo-qt-build ros-indigo-driver-common ros-indigo-gazebo-ros-control ros-indigo-gazebo-ros-pkgs ros-indigo-ros-control ros-indigo-control-toolbox ros-indigo-realtime-tools ros-indigo-ros-controllers ros-indigo-xacro python-wstool ros-indigo-tf-conversions ros-indigo-kdl-parser

RUN apt-get install -y gazebo7 ros-kinetic-qt-build ros-kinetic-gazebo-ros-control ros-kinetic-gazebo-ros-pkgs ros-kinetic-ros-control ros-kinetic-control-toolbox ros-kinetic-realtime-tools ros-kinetic-ros-controllers ros-kinetic-xacro python-wstool ros-kinetic-tf-conversions ros-kinetic-kdl-parser
# required to build certain python libraries
RUN apt-get install python3-dev -y
RUN apt-get -y install python-rosinstall
# install pip - canonical installation instructions from pip-installer.org
# http://www.pip-installer.org/en/latest/installing.html
#ADD https://bitbucket.org/pypa/setuptools/raw/bootstrap/ez_setup.py /tmp/ez_setup.py
#ADD https://raw.github.com/pypa/pip/master/contrib/get-pip.py /tmp/get-pip.py
#RUN python /tmp/ez_setup.py
#RUN python /tmp/get-pip.py
RUN pip install --upgrade pip 

# install and configure virtualenv
RUN pip install virtualenv 
RUN pip install virtualenvwrapper
#ENV WORKON_HOME ~/.virtualenvs
#RUN mkdir -p $WORKON_HOME
#RUN source /usr/local/bin/virtualenvwrapper.sh

ENV LANG C.UTF-8
ENV LC_ALL C.UTF-8

ENTRYPOINT ["/ros_entrypoint.sh"]
CMD ["bash"]
#RUN rm -rf /var/lib/apt/lists/*
# final part
#RUN rosdep init
#RUN rosdep update
RUN source /opt/ros/kinetic/setup.bash
RUN mkdir -p ~/ros_ws/src
RUN cd ~/ros_ws
RUN catkin_make
RUN source devel/setup.bash
#RUN rosinstall_generator desktop_full --rosdistro indigo --deps --wet-only --tar > indigo-desktop-full-wet.rosinstall
#RUN wstool init -j8 src indigo-desktop-full-wet.rosinstall
#RUN rosdep install --from-paths src --ignore-src --rosdistro indigo -y
#RUN ./src/catkin/bin/catkin_make_isolated --install-space /opt/ros/indigo -DCMAKE_BUILD_TYPE=Release
RUN source /opt/ros/kinetic/setup.bash

RUN cd ~/ros_ws/src
RUN wstool init .
RUN rosdep install 
#RUN wstool set --target-workspace=src
#RUN wstool merge https://raw.githubusercontent.com/RethinkRobotics/baxter/release-1.1.1/baxter_sdk.rosinstall
RUN wstool merge https://raw.githubusercontent.com/RethinkRobotics/baxter/master/baxter_sdk.rosinstall
RUN wstool merge https://raw.githubusercontent.com/RethinkRobotics/baxter_simulator/kinetic-devel/baxter_simulator.rosinstall
RUN wstool update
RUN cd ~/ros_ws
RUN catkin_make
RUN catkin_make install
RUN wget https://github.com/RethinkRobotics/baxter/raw/master/baxter.sh
RUN chmod u+x baxter.sh

# Switch to user
USER "${user}"
# This is required for sharing Xauthority
ENV QT_X11_NO_MITSHM=1
ENV CATKIN_TOPLEVEL_WS="${workspace}/devel"
# Switch to the workspace
WORKDIR ${workspace}

#extra packages for SSSA TAUM
#RUN apt-get install ros-indigo-openni2-camera ros-indigo-visp ros-indigo-visp-bridge ros-indigo-moveit-core libzmq-dev libx264-dev ros-indigo-moveit-ros-move-group ros-indigo-ecl-geometry
#RUN apt-get install x11-apps xfce4
#ENV source /opt/ros/indigo/setup.bash
#CMD /bin/bash

#MISSING DOWNLOAD of GAZEBO models inside: user/.gazebo/models
#https://bitbucket.org/osrf/gazebo_models/downloads

#TODO xfce for enabling full desktop: apt-get install xfce4
#TODO nvidia helpers: can be done at docker-run
#TODO automatically source source /opt/ros/indigo/setup.bash by adding it to the .bashrc

